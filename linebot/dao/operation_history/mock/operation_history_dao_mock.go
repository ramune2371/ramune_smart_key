// Code generated by MockGen. DO NOT EDIT.
// Source: operation_history_dao.go

// Package mock_operation_history is a generated GoMock package.
package mock_operation_history

import (
	entity "linebot/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOperationHistoryDao is a mock of OperationHistoryDao interface.
type MockOperationHistoryDao struct {
	ctrl     *gomock.Controller
	recorder *MockOperationHistoryDaoMockRecorder
}

// MockOperationHistoryDaoMockRecorder is the mock recorder for MockOperationHistoryDao.
type MockOperationHistoryDaoMockRecorder struct {
	mock *MockOperationHistoryDao
}

// NewMockOperationHistoryDao creates a new mock instance.
func NewMockOperationHistoryDao(ctrl *gomock.Controller) *MockOperationHistoryDao {
	mock := &MockOperationHistoryDao{ctrl: ctrl}
	mock.recorder = &MockOperationHistoryDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationHistoryDao) EXPECT() *MockOperationHistoryDaoMockRecorder {
	return m.recorder
}

// InsertOperationHistory mocks base method.
func (m *MockOperationHistoryDao) InsertOperationHistory(lineId string, operationType entity.OperationType, operationResult entity.OperationResult) *entity.OperationHistory {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertOperationHistory", lineId, operationType, operationResult)
	ret0, _ := ret[0].(*entity.OperationHistory)
	return ret0
}

// InsertOperationHistory indicates an expected call of InsertOperationHistory.
func (mr *MockOperationHistoryDaoMockRecorder) InsertOperationHistory(lineId, operationType, operationResult interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertOperationHistory", reflect.TypeOf((*MockOperationHistoryDao)(nil).InsertOperationHistory), lineId, operationType, operationResult)
}

// UpdateOperationHistoryByOperationId mocks base method.
func (m *MockOperationHistoryDao) UpdateOperationHistoryByOperationId(operationId int, result entity.OperationResult) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOperationHistoryByOperationId", operationId, result)
	ret0, _ := ret[0].(int)
	return ret0
}

// UpdateOperationHistoryByOperationId indicates an expected call of UpdateOperationHistoryByOperationId.
func (mr *MockOperationHistoryDaoMockRecorder) UpdateOperationHistoryByOperationId(operationId, result interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOperationHistoryByOperationId", reflect.TypeOf((*MockOperationHistoryDao)(nil).UpdateOperationHistoryByOperationId), operationId, result)
}

// UpdateOperationHistoryWithErrorByOperationId mocks base method.
func (m *MockOperationHistoryDao) UpdateOperationHistoryWithErrorByOperationId(operationId int, errorCode entity.OperationErrorCode) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOperationHistoryWithErrorByOperationId", operationId, errorCode)
	ret0, _ := ret[0].(int)
	return ret0
}

// UpdateOperationHistoryWithErrorByOperationId indicates an expected call of UpdateOperationHistoryWithErrorByOperationId.
func (mr *MockOperationHistoryDaoMockRecorder) UpdateOperationHistoryWithErrorByOperationId(operationId, errorCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOperationHistoryWithErrorByOperationId", reflect.TypeOf((*MockOperationHistoryDao)(nil).UpdateOperationHistoryWithErrorByOperationId), operationId, errorCode)
}
