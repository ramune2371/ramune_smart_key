// Code generated by MockGen. DO NOT EDIT.
// Source: encryptor.go

// Package mock_security is a generated GoMock package.
package mock_security

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEncryptor is a mock of Encryptor interface.
type MockEncryptor struct {
	ctrl     *gomock.Controller
	recorder *MockEncryptorMockRecorder
}

// MockEncryptorMockRecorder is the mock recorder for MockEncryptor.
type MockEncryptorMockRecorder struct {
	mock *MockEncryptor
}

// NewMockEncryptor creates a new mock instance.
func NewMockEncryptor(ctrl *gomock.Controller) *MockEncryptor {
	mock := &MockEncryptor{ctrl: ctrl}
	mock.recorder = &MockEncryptorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEncryptor) EXPECT() *MockEncryptorMockRecorder {
	return m.recorder
}

// SaltHash mocks base method.
func (m *MockEncryptor) SaltHash(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaltHash", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// SaltHash indicates an expected call of SaltHash.
func (mr *MockEncryptorMockRecorder) SaltHash(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaltHash", reflect.TypeOf((*MockEncryptor)(nil).SaltHash), arg0)
}
